<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="438" onload="init(evt)" viewBox="0 0 1200 438" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="438.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="421" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="421" > </text>
<g id="frames">
<g >
<title>__GI___execve (18,156,002 samples, 0.02%)</title><rect x="1185.3" y="357" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1188.30" y="367.5" ></text>
</g>
<g >
<title>[unknown] (33,145,824 samples, 0.03%)</title><rect x="10.0" y="341" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.03" y="351.5" ></text>
</g>
<g >
<title>__handle_mm_fault (181,967,958 samples, 0.16%)</title><rect x="1165.0" y="181" width="1.9" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1167.97" y="191.5" ></text>
</g>
<g >
<title>do_futex (35,746,353 samples, 0.03%)</title><rect x="1159.5" y="277" width="0.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1162.45" y="287.5" ></text>
</g>
<g >
<title>__alloc_pages_noprof (36,751,615 samples, 0.03%)</title><rect x="1166.5" y="101" width="0.4" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1169.49" y="111.5" ></text>
</g>
<g >
<title>fdimf@plt (66,027,683 samples, 0.06%)</title><rect x="208.5" y="325" width="0.7" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="211.50" y="335.5" ></text>
</g>
<g >
<title>exc_page_fault (218,731,943 samples, 0.19%)</title><rect x="1165.0" y="229" width="2.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1167.97" y="239.5" ></text>
</g>
<g >
<title>do_vmi_munmap (157,437,972 samples, 0.14%)</title><rect x="1181.6" y="277" width="1.6" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1184.56" y="287.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (152,761,320 samples, 0.14%)</title><rect x="1185.5" y="245" width="1.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1188.49" y="255.5" ></text>
</g>
<g >
<title>__GI_____strtof_l_internal (47,583,258 samples, 0.04%)</title><rect x="1161.1" y="357" width="0.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1164.11" y="367.5" ></text>
</g>
<g >
<title>prev_balance (12,341,434 samples, 0.01%)</title><rect x="1184.0" y="245" width="0.1" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="1186.95" y="255.5" ></text>
</g>
<g >
<title>move_queued_task (13,964,078 samples, 0.01%)</title><rect x="1183.8" y="261" width="0.2" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="1186.81" y="271.5" ></text>
</g>
<g >
<title>genetic::cpp_evolve (1,864,687,305 samples, 1.65%)</title><rect x="1161.6" y="293" width="19.5" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1164.60" y="303.5" ></text>
</g>
<g >
<title>__expf_fma (3,559,264,651 samples, 3.16%)</title><rect x="61.0" y="325" width="37.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="63.99" y="335.5" >__e..</text>
</g>
<g >
<title>ret_from_fork (11,392,131 samples, 0.01%)</title><rect x="1184.4" y="341" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1187.36" y="351.5" ></text>
</g>
<g >
<title>ct_idle_exit (17,113,269 samples, 0.02%)</title><rect x="1187.1" y="261" width="0.2" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="1190.09" y="271.5" ></text>
</g>
<g >
<title>do_user_addr_fault (289,573,248 samples, 0.26%)</title><rect x="1172.1" y="197" width="3.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1175.08" y="207.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (27,197,450 samples, 0.02%)</title><rect x="1189.2" y="357" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1192.15" y="367.5" ></text>
</g>
<g >
<title>lapic_next_deadline (40,288,578 samples, 0.04%)</title><rect x="1159.0" y="229" width="0.5" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1162.03" y="239.5" ></text>
</g>
<g >
<title>sinf@plt (360,347,641 samples, 0.32%)</title><rect x="214.5" y="325" width="3.8" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="217.52" y="335.5" ></text>
</g>
<g >
<title>ret_from_fork (40,288,716 samples, 0.04%)</title><rect x="1183.2" y="341" width="0.5" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1186.25" y="351.5" ></text>
</g>
<g >
<title>dequeue_entities (12,894,795 samples, 0.01%)</title><rect x="1183.7" y="229" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1186.67" y="239.5" ></text>
</g>
<g >
<title>__futex_wait (35,746,353 samples, 0.03%)</title><rect x="1159.5" y="245" width="0.3" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="1162.45" y="255.5" ></text>
</g>
<g >
<title>genetic::cpp_evolve (33,145,824 samples, 0.03%)</title><rect x="10.0" y="277" width="0.4" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="13.03" y="287.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (13,964,078 samples, 0.01%)</title><rect x="1183.8" y="309" width="0.2" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="1186.81" y="319.5" ></text>
</g>
<g >
<title>expf@plt (309,032,494 samples, 0.27%)</title><rect x="205.3" y="325" width="3.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="208.26" y="335.5" ></text>
</g>
<g >
<title>__pick_next_task (12,341,434 samples, 0.01%)</title><rect x="1184.0" y="261" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1186.95" y="271.5" ></text>
</g>
<g >
<title>vma_alloc_folio_noprof (73,696,976 samples, 0.07%)</title><rect x="1166.1" y="149" width="0.8" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1169.10" y="159.5" ></text>
</g>
<g >
<title>[unknown] (34,998,950 samples, 0.03%)</title><rect x="1184.9" y="357" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1187.93" y="367.5" ></text>
</g>
<g >
<title>all (112,812,018,927 samples, 100%)</title><rect x="10.0" y="389" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>utf_composinglike (34,998,950 samples, 0.03%)</title><rect x="1184.9" y="341" width="0.4" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="1187.93" y="351.5" ></text>
</g>
<g >
<title>sched_balance_domains (152,761,320 samples, 0.14%)</title><rect x="1185.5" y="197" width="1.6" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1188.49" y="207.5" ></text>
</g>
<g >
<title>[unknown] (13,944,380 samples, 0.01%)</title><rect x="1188.9" y="357" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1191.94" y="367.5" ></text>
</g>
<g >
<title>psi_task_switch (35,746,353 samples, 0.03%)</title><rect x="1159.5" y="181" width="0.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1162.45" y="191.5" ></text>
</g>
<g >
<title>do_user_addr_fault (218,731,943 samples, 0.19%)</title><rect x="1165.0" y="213" width="2.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1167.97" y="223.5" ></text>
</g>
<g >
<title>migration/2 (12,341,434 samples, 0.01%)</title><rect x="1184.0" y="373" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1186.95" y="383.5" ></text>
</g>
<g >
<title>folios_put_refs (34,926,945 samples, 0.03%)</title><rect x="1172.5" y="101" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1175.49" y="111.5" ></text>
</g>
<g >
<title>run_symbolic_regression (1,899,830,544 samples, 1.68%)</title><rect x="1161.6" y="325" width="19.9" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1164.60" y="335.5" ></text>
</g>
<g >
<title>folio_add_lru (35,976,080 samples, 0.03%)</title><rect x="1165.7" y="149" width="0.4" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1168.72" y="159.5" ></text>
</g>
<g >
<title>exit_mmap (18,156,002 samples, 0.02%)</title><rect x="1185.3" y="213" width="0.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1188.30" y="223.5" ></text>
</g>
<g >
<title>migration/0 (12,894,795 samples, 0.01%)</title><rect x="1183.7" y="373" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1186.67" y="383.5" ></text>
</g>
<g >
<title>folio_alloc_mpol_noprof (72,143,414 samples, 0.06%)</title><rect x="1174.4" y="117" width="0.7" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1177.35" y="127.5" ></text>
</g>
<g >
<title>vm_normal_page (38,843,735 samples, 0.03%)</title><rect x="1182.8" y="181" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1185.80" y="191.5" ></text>
</g>
<g >
<title>ret_from_fork (13,964,078 samples, 0.01%)</title><rect x="1183.8" y="341" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1186.81" y="351.5" ></text>
</g>
<g >
<title>do_anonymous_page (289,573,248 samples, 0.26%)</title><rect x="1172.1" y="149" width="3.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1175.08" y="159.5" ></text>
</g>
<g >
<title>__math_oflowf (40,290,303 samples, 0.04%)</title><rect x="156.2" y="325" width="0.4" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="159.17" y="335.5" ></text>
</g>
<g >
<title>genetic::tournament_kernel (40,011,510 samples, 0.04%)</title><rect x="1160.6" y="325" width="0.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1163.59" y="335.5" ></text>
</g>
<g >
<title>futex_wait_queue (35,746,353 samples, 0.03%)</title><rect x="1159.5" y="229" width="0.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1162.45" y="239.5" ></text>
</g>
<g >
<title>__x64_sys_execve (18,156,002 samples, 0.02%)</title><rect x="1185.3" y="309" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1188.30" y="319.5" ></text>
</g>
<g >
<title>__fdimf (361,429,103 samples, 0.32%)</title><rect x="98.2" y="325" width="3.8" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="101.22" y="335.5" ></text>
</g>
<g >
<title>enqueue_task (13,964,078 samples, 0.01%)</title><rect x="1183.8" y="245" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1186.81" y="255.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (661,393,644 samples, 0.59%)</title><rect x="1169.4" y="229" width="6.9" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1172.38" y="239.5" ></text>
</g>
<g >
<title>__pte_offset_map_lock (142,621,164 samples, 0.13%)</title><rect x="1172.9" y="133" width="1.5" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1175.86" y="143.5" ></text>
</g>
<g >
<title>__schedule (35,746,353 samples, 0.03%)</title><rect x="1159.5" y="197" width="0.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1162.45" y="207.5" ></text>
</g>
<g >
<title>logf@plt (509,372,560 samples, 0.45%)</title><rect x="209.2" y="325" width="5.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="212.19" y="335.5" ></text>
</g>
<g >
<title>ret_from_fork_asm (12,341,434 samples, 0.01%)</title><rect x="1184.0" y="357" width="0.1" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1186.95" y="367.5" ></text>
</g>
<g >
<title>sched_balance_newidle (12,341,434 samples, 0.01%)</title><rect x="1184.0" y="213" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1186.95" y="223.5" ></text>
</g>
<g >
<title>__x64_sys_futex (35,746,353 samples, 0.03%)</title><rect x="1159.5" y="293" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1162.45" y="303.5" ></text>
</g>
<g >
<title>cosf@plt (265,459,334 samples, 0.24%)</title><rect x="202.5" y="325" width="2.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="205.49" y="335.5" ></text>
</g>
<g >
<title>wezterm_gui::quad::HeapQuadAllocator::apply_to (46,478,710 samples, 0.04%)</title><rect x="1189.5" y="357" width="0.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1192.51" y="367.5" ></text>
</g>
<g >
<title>update_process_times (40,287,684 samples, 0.04%)</title><rect x="1158.6" y="213" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1161.61" y="223.5" ></text>
</g>
<g >
<title>kthread (40,288,716 samples, 0.04%)</title><rect x="1183.2" y="325" width="0.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1186.25" y="335.5" ></text>
</g>
<g >
<title>_find_next_and_bit (11,392,131 samples, 0.01%)</title><rect x="1184.4" y="149" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1187.36" y="159.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (157,437,972 samples, 0.14%)</title><rect x="1181.6" y="341" width="1.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1184.56" y="351.5" ></text>
</g>
<g >
<title>handle_softirqs (152,761,320 samples, 0.14%)</title><rect x="1185.5" y="213" width="1.6" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1188.49" y="223.5" ></text>
</g>
<g >
<title>sched_balance_newidle (11,392,131 samples, 0.01%)</title><rect x="1184.4" y="213" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1187.36" y="223.5" ></text>
</g>
<g >
<title>_raw_spin_lock (142,621,164 samples, 0.13%)</title><rect x="1172.9" y="117" width="1.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1175.86" y="127.5" ></text>
</g>
<g >
<title>bprm_execve (18,156,002 samples, 0.02%)</title><rect x="1185.3" y="277" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1188.30" y="287.5" ></text>
</g>
<g >
<title>clockevents_program_event (40,288,578 samples, 0.04%)</title><rect x="1159.0" y="245" width="0.5" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1162.03" y="255.5" ></text>
</g>
<g >
<title>migration_cpu_stop (13,964,078 samples, 0.01%)</title><rect x="1183.8" y="277" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1186.81" y="287.5" ></text>
</g>
<g >
<title>__schedule (12,341,434 samples, 0.01%)</title><rect x="1184.0" y="277" width="0.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1186.95" y="287.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (18,156,002 samples, 0.02%)</title><rect x="1185.3" y="293" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1188.30" y="303.5" ></text>
</g>
<g >
<title>idle_cpu (129,359,948 samples, 0.11%)</title><rect x="1185.7" y="165" width="1.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1188.74" y="175.5" ></text>
</g>
<g >
<title>exc_page_fault (289,573,248 samples, 0.26%)</title><rect x="1172.1" y="213" width="3.0" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1175.08" y="223.5" ></text>
</g>
<g >
<title>gomp_thread_start (113,209,853 samples, 0.10%)</title><rect x="1159.8" y="341" width="1.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1162.83" y="351.5" ></text>
</g>
<g >
<title>menu_select (38,873,550 samples, 0.03%)</title><rect x="1188.2" y="293" width="0.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1191.24" y="303.5" ></text>
</g>
<g >
<title>ret_from_fork (12,341,434 samples, 0.01%)</title><rect x="1184.0" y="341" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1186.95" y="351.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (12,894,795 samples, 0.01%)</title><rect x="1183.7" y="309" width="0.1" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="1186.67" y="319.5" ></text>
</g>
<g >
<title>sched_balance_update_blocked_averages (12,341,434 samples, 0.01%)</title><rect x="1184.0" y="197" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1186.95" y="207.5" ></text>
</g>
<g >
<title>philox_next4 (40,011,510 samples, 0.04%)</title><rect x="1160.6" y="309" width="0.4" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="1163.59" y="319.5" ></text>
</g>
<g >
<title>__vm_munmap (157,437,972 samples, 0.14%)</title><rect x="1181.6" y="293" width="1.6" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="1184.56" y="303.5" ></text>
</g>
<g >
<title>kthread (12,894,795 samples, 0.01%)</title><rect x="1183.7" y="325" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1186.67" y="335.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (39,119,808 samples, 0.03%)</title><rect x="1181.6" y="213" width="0.4" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1184.56" y="223.5" ></text>
</g>
<g >
<title>handle_mm_fault (289,573,248 samples, 0.26%)</title><rect x="1172.1" y="181" width="3.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1175.08" y="191.5" ></text>
</g>
<g >
<title>begin_new_exec (18,156,002 samples, 0.02%)</title><rect x="1185.3" y="245" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1188.30" y="255.5" ></text>
</g>
<g >
<title>genetic::find_batched_fitness (1,159,423,270 samples, 1.03%)</title><rect x="1169.0" y="261" width="12.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1171.98" y="271.5" ></text>
</g>
<g >
<title>__cosf_fma (4,838,971,670 samples, 4.29%)</title><rect x="10.4" y="325" width="50.6" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="13.37" y="335.5" >__cos..</text>
</g>
<g >
<title>std::istream::sentry::sentry (35,143,239 samples, 0.03%)</title><rect x="1181.1" y="309" width="0.4" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1184.11" y="319.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (739,742,030 samples, 0.66%)</title><rect x="1169.0" y="245" width="7.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1171.98" y="255.5" ></text>
</g>
<g >
<title>[unknown] (33,145,824 samples, 0.03%)</title><rect x="10.0" y="309" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.03" y="319.5" ></text>
</g>
<g >
<title>futex_wait (35,746,353 samples, 0.03%)</title><rect x="1159.5" y="261" width="0.3" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1162.45" y="271.5" ></text>
</g>
<g >
<title>__mmput (18,156,002 samples, 0.02%)</title><rect x="1185.3" y="229" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1188.30" y="239.5" ></text>
</g>
<g >
<title>intel_idle (92,867,658 samples, 0.08%)</title><rect x="1187.3" y="261" width="0.9" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1190.27" y="271.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (157,437,972 samples, 0.14%)</title><rect x="1181.6" y="309" width="1.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1184.56" y="319.5" ></text>
</g>
<g >
<title>rcu_sched_clock_irq (40,287,684 samples, 0.04%)</title><rect x="1158.6" y="197" width="0.4" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="1161.61" y="207.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (35,746,353 samples, 0.03%)</title><rect x="1159.5" y="325" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1162.45" y="335.5" ></text>
</g>
<g >
<title>__tlb_batch_free_encoded_pages (39,119,808 samples, 0.03%)</title><rect x="1181.6" y="197" width="0.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1184.56" y="207.5" ></text>
</g>
<g >
<title>update_load_avg (12,894,795 samples, 0.01%)</title><rect x="1183.7" y="197" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1186.67" y="207.5" ></text>
</g>
<g >
<title>migration/10 (13,964,078 samples, 0.01%)</title><rect x="1183.8" y="373" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1186.81" y="383.5" ></text>
</g>
<g >
<title>__libc_start_call_main (1,899,830,544 samples, 1.68%)</title><rect x="1161.6" y="357" width="19.9" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1164.60" y="367.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (15,823,689 samples, 0.01%)</title><rect x="1188.5" y="277" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1191.48" y="287.5" ></text>
</g>
<g >
<title>do_syscall_64 (35,746,353 samples, 0.03%)</title><rect x="1159.5" y="309" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1162.45" y="319.5" ></text>
</g>
<g >
<title>intrusive_collections::rbtree::post_insert (13,944,380 samples, 0.01%)</title><rect x="1188.9" y="341" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1191.94" y="351.5" ></text>
</g>
<g >
<title>void genetic::execute_kernel&lt;20&gt; (89,978,804,844 samples, 79.76%)</title><rect x="218.3" y="325" width="941.2" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="221.28" y="335.5" >void genetic::execute_kernel&lt;20&gt;</text>
</g>
<g >
<title>GOMP_parallel (33,145,824 samples, 0.03%)</title><rect x="10.0" y="293" width="0.4" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="13.03" y="303.5" ></text>
</g>
<g >
<title>vms_clear_ptes (157,437,972 samples, 0.14%)</title><rect x="1181.6" y="229" width="1.6" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1184.56" y="239.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (11,392,131 samples, 0.01%)</title><rect x="1184.4" y="165" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1187.36" y="175.5" ></text>
</g>
<g >
<title>[libluajit-5.1.so.2.1.1713773202] (28,415,710 samples, 0.03%)</title><rect x="1184.6" y="357" width="0.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1187.64" y="367.5" ></text>
</g>
<g >
<title>do_anonymous_page (181,967,958 samples, 0.16%)</title><rect x="1165.0" y="165" width="1.9" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1167.97" y="175.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (18,156,002 samples, 0.02%)</title><rect x="1185.3" y="341" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1188.30" y="351.5" ></text>
</g>
<g >
<title>load_elf_binary (18,156,002 samples, 0.02%)</title><rect x="1185.3" y="261" width="0.2" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="1188.30" y="271.5" ></text>
</g>
<g >
<title>error_entry (40,292,488 samples, 0.04%)</title><rect x="1176.3" y="229" width="0.4" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1179.30" y="239.5" ></text>
</g>
<g >
<title>balance_fair (11,392,131 samples, 0.01%)</title><rect x="1184.4" y="229" width="0.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1187.36" y="239.5" ></text>
</g>
<g >
<title>ret_from_fork_asm (40,288,716 samples, 0.04%)</title><rect x="1183.2" y="357" width="0.5" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1186.25" y="367.5" ></text>
</g>
<g >
<title>__folio_batch_add_and_move (34,926,945 samples, 0.03%)</title><rect x="1172.5" y="133" width="0.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1175.49" y="143.5" ></text>
</g>
<g >
<title>kthread (12,341,434 samples, 0.01%)</title><rect x="1184.0" y="325" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1186.95" y="335.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (152,761,320 samples, 0.14%)</title><rect x="1185.5" y="261" width="1.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1188.49" y="271.5" ></text>
</g>
<g >
<title>move_queued_task (12,894,795 samples, 0.01%)</title><rect x="1183.7" y="261" width="0.1" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="1186.67" y="271.5" ></text>
</g>
<g >
<title>__memcpy (23,401,372 samples, 0.02%)</title><rect x="1185.5" y="165" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1188.49" y="175.5" ></text>
</g>
<g >
<title>__munmap (157,437,972 samples, 0.14%)</title><rect x="1181.6" y="357" width="1.6" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1184.56" y="367.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (33,145,824 samples, 0.03%)</title><rect x="10.0" y="261" width="0.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="13.03" y="271.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (10,250,812 samples, 0.01%)</title><rect x="1184.3" y="309" width="0.1" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="1187.25" y="319.5" ></text>
</g>
<g >
<title>ret_from_fork (10,250,812 samples, 0.01%)</title><rect x="1184.3" y="341" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1187.25" y="351.5" ></text>
</g>
<g >
<title>&lt;wezterm_color_types::SrgbaTuple as core::hash::Hash&gt;::hash (15,077,635 samples, 0.01%)</title><rect x="1188.8" y="357" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1191.78" y="367.5" ></text>
</g>
<g >
<title>start_secondary (301,615,797 samples, 0.27%)</title><rect x="1185.5" y="341" width="3.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1188.49" y="351.5" ></text>
</g>
<g >
<title>main (1,899,830,544 samples, 1.68%)</title><rect x="1161.6" y="341" width="19.9" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="1164.60" y="351.5" ></text>
</g>
<g >
<title>do_syscall_64 (157,437,972 samples, 0.14%)</title><rect x="1181.6" y="325" width="1.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1184.56" y="335.5" ></text>
</g>
<g >
<title>get_page_from_freelist (72,143,414 samples, 0.06%)</title><rect x="1174.4" y="69" width="0.7" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1177.35" y="79.5" ></text>
</g>
<g >
<title>sched_balance_rq (11,392,131 samples, 0.01%)</title><rect x="1184.4" y="197" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1187.36" y="207.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (564,779,694 samples, 0.50%)</title><rect x="1163.1" y="245" width="5.9" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1166.07" y="255.5" ></text>
</g>
<g >
<title>migration/6 (10,250,812 samples, 0.01%)</title><rect x="1184.3" y="373" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1187.25" y="383.5" ></text>
</g>
<g >
<title>migration/7 (11,392,131 samples, 0.01%)</title><rect x="1184.4" y="373" width="0.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1187.36" y="383.5" ></text>
</g>
<g >
<title>__handle_mm_fault (289,573,248 samples, 0.26%)</title><rect x="1172.1" y="165" width="3.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1175.08" y="175.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (80,576,262 samples, 0.07%)</title><rect x="1158.6" y="309" width="0.9" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1161.61" y="319.5" ></text>
</g>
<g >
<title>sched_balance_rq (152,761,320 samples, 0.14%)</title><rect x="1185.5" y="181" width="1.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1188.49" y="191.5" ></text>
</g>
<g >
<title>balance_fair (12,341,434 samples, 0.01%)</title><rect x="1184.0" y="229" width="0.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1186.95" y="239.5" ></text>
</g>
<g >
<title>handle_mm_fault (218,731,943 samples, 0.19%)</title><rect x="1165.0" y="197" width="2.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1167.97" y="207.5" ></text>
</g>
<g >
<title>__logf_fma (5,178,967,940 samples, 4.59%)</title><rect x="102.0" y="325" width="54.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="105.00" y="335.5" >__log..</text>
</g>
<g >
<title>__pick_next_task (11,392,131 samples, 0.01%)</title><rect x="1184.4" y="261" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1187.36" y="271.5" ></text>
</g>
<g >
<title>genetic::symFit (1,864,687,305 samples, 1.65%)</title><rect x="1161.6" y="309" width="19.5" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1164.60" y="319.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (705,264,035 samples, 0.63%)</title><rect x="1161.6" y="261" width="7.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1164.60" y="271.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (152,761,320 samples, 0.14%)</title><rect x="1185.5" y="229" width="1.6" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1188.49" y="239.5" ></text>
</g>
<g >
<title>__alloc_pages_noprof (72,143,414 samples, 0.06%)</title><rect x="1174.4" y="85" width="0.7" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1177.35" y="95.5" ></text>
</g>
<g >
<title>__get_next_timer_interrupt (15,823,689 samples, 0.01%)</title><rect x="1188.5" y="245" width="0.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1191.48" y="255.5" ></text>
</g>
<g >
<title>migration_cpu_stop (12,894,795 samples, 0.01%)</title><rect x="1183.7" y="277" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1186.67" y="287.5" ></text>
</g>
<g >
<title>unmap_vmas (118,318,164 samples, 0.10%)</title><rect x="1182.0" y="213" width="1.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1184.97" y="223.5" ></text>
</g>
<g >
<title>folio_batch_move_lru (34,926,945 samples, 0.03%)</title><rect x="1172.5" y="117" width="0.4" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1175.49" y="127.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (15,823,689 samples, 0.01%)</title><rect x="1188.5" y="261" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1191.48" y="271.5" ></text>
</g>
<g >
<title>ret_from_fork_asm (10,250,812 samples, 0.01%)</title><rect x="1184.3" y="357" width="0.1" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1187.25" y="367.5" ></text>
</g>
<g >
<title>__list_del_entry_valid_or_report (72,143,414 samples, 0.06%)</title><rect x="1174.4" y="37" width="0.7" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1177.35" y="47.5" ></text>
</g>
<g >
<title>process_one_work (40,288,716 samples, 0.04%)</title><rect x="1183.2" y="293" width="0.5" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1186.25" y="303.5" ></text>
</g>
<g >
<title>genetic_benchma (112,164,212,558 samples, 99.43%)</title><rect x="10.0" y="373" width="1173.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.03" y="383.5" >genetic_benchma</text>
</g>
<g >
<title>migration_cpu_stop (10,250,812 samples, 0.01%)</title><rect x="1184.3" y="277" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1187.25" y="287.5" ></text>
</g>
<g >
<title>__sinf_fma (4,388,021,042 samples, 3.89%)</title><rect x="156.6" y="325" width="45.9" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="159.59" y="335.5" >__si..</text>
</g>
<g >
<title>genetic::subtree_mutation (73,198,343 samples, 0.06%)</title><rect x="1159.8" y="309" width="0.8" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1162.83" y="319.5" ></text>
</g>
<g >
<title>ret_from_fork_asm (12,894,795 samples, 0.01%)</title><rect x="1183.7" y="357" width="0.1" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1186.67" y="367.5" ></text>
</g>
<g >
<title>worker_thread (40,288,716 samples, 0.04%)</title><rect x="1183.2" y="309" width="0.5" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1186.25" y="319.5" ></text>
</g>
<g >
<title>_raw_spin_lock (72,294,902 samples, 0.06%)</title><rect x="1165.0" y="133" width="0.7" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1167.97" y="143.5" ></text>
</g>
<g >
<title>nvim (81,570,662 samples, 0.07%)</title><rect x="1184.6" y="373" width="0.9" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="1187.64" y="383.5" ></text>
</g>
<g >
<title>[unknown] (110,047,357,035 samples, 97.55%)</title><rect x="10.0" y="357" width="1151.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.03" y="367.5" >[unknown]</text>
</g>
<g >
<title>cpu_stopper_thread (12,894,795 samples, 0.01%)</title><rect x="1183.7" y="293" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1186.67" y="303.5" ></text>
</g>
<g >
<title>lru_gen_del_folio.constprop.0 (39,119,808 samples, 0.03%)</title><rect x="1181.6" y="133" width="0.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1184.56" y="143.5" ></text>
</g>
<g >
<title>genetic::cpp_evolve (73,198,343 samples, 0.06%)</title><rect x="1159.8" y="325" width="0.8" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1162.83" y="335.5" ></text>
</g>
<g >
<title>ret_from_fork_asm (13,964,078 samples, 0.01%)</title><rect x="1183.8" y="357" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1186.81" y="367.5" ></text>
</g>
<g >
<title>gomp_barrier_handle_tasks (109,855,989,265 samples, 97.38%)</title><rect x="10.4" y="341" width="1149.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="13.37" y="351.5" >gomp_barrier_handle_tasks</text>
</g>
<g >
<title>&lt;siphasher::sip128::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (12,897,320 samples, 0.01%)</title><rect x="1188.6" y="357" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1191.65" y="367.5" ></text>
</g>
<g >
<title>genetic::set_batched_fitness (1,864,687,305 samples, 1.65%)</title><rect x="1161.6" y="277" width="19.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1164.60" y="287.5" ></text>
</g>
<g >
<title>kthread (11,392,131 samples, 0.01%)</title><rect x="1184.4" y="325" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1187.36" y="335.5" ></text>
</g>
<g >
<title>schedule (12,341,434 samples, 0.01%)</title><rect x="1184.0" y="293" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1186.95" y="303.5" ></text>
</g>
<g >
<title>detach_entity_load_avg (12,894,795 samples, 0.01%)</title><rect x="1183.7" y="181" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1186.67" y="191.5" ></text>
</g>
<g >
<title>vma_alloc_folio_noprof (72,143,414 samples, 0.06%)</title><rect x="1174.4" y="133" width="0.7" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1177.35" y="143.5" ></text>
</g>
<g >
<title>sync_regs (114,080,481 samples, 0.10%)</title><rect x="1175.1" y="213" width="1.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1178.10" y="223.5" ></text>
</g>
<g >
<title>do_vmi_align_munmap (157,437,972 samples, 0.14%)</title><rect x="1181.6" y="261" width="1.6" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1184.56" y="271.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (80,576,262 samples, 0.07%)</title><rect x="1158.6" y="277" width="0.9" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1161.61" y="287.5" ></text>
</g>
<g >
<title>unmap_page_range (18,156,002 samples, 0.02%)</title><rect x="1185.3" y="181" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1188.30" y="191.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (11,392,131 samples, 0.01%)</title><rect x="1184.4" y="309" width="0.1" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="1187.36" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (18,156,002 samples, 0.02%)</title><rect x="1185.3" y="325" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1188.30" y="335.5" ></text>
</g>
<g >
<title>ct_kernel_enter.isra.0 (17,113,269 samples, 0.02%)</title><rect x="1187.1" y="245" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1190.09" y="255.5" ></text>
</g>
<g >
<title>__wrgsbase_inactive (15,330,144 samples, 0.01%)</title><rect x="1184.5" y="357" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1187.48" y="367.5" ></text>
</g>
<g >
<title>prev_balance (11,392,131 samples, 0.01%)</title><rect x="1184.4" y="245" width="0.1" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="1187.36" y="255.5" ></text>
</g>
<g >
<title>do_idle (301,615,797 samples, 0.27%)</title><rect x="1185.5" y="309" width="3.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1188.49" y="319.5" ></text>
</g>
<g >
<title>common_startup_64 (301,615,797 samples, 0.27%)</title><rect x="1185.5" y="357" width="3.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1188.49" y="367.5" ></text>
</g>
<g >
<title>kthread (13,964,078 samples, 0.01%)</title><rect x="1183.8" y="325" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1186.81" y="335.5" ></text>
</g>
<g >
<title>void genetic::meanSquareError&lt;float&gt; (419,681,240 samples, 0.37%)</title><rect x="1176.7" y="245" width="4.4" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1179.72" y="255.5" ></text>
</g>
<g >
<title>kthread (10,250,812 samples, 0.01%)</title><rect x="1184.3" y="325" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1187.25" y="335.5" ></text>
</g>
<g >
<title>folio_alloc_mpol_noprof (36,751,615 samples, 0.03%)</title><rect x="1166.5" y="133" width="0.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1169.49" y="143.5" ></text>
</g>
<g >
<title>[unknown] (33,145,824 samples, 0.03%)</title><rect x="10.0" y="325" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.03" y="335.5" ></text>
</g>
<g >
<title>vms_complete_munmap_vmas (157,437,972 samples, 0.14%)</title><rect x="1181.6" y="245" width="1.6" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1184.56" y="255.5" ></text>
</g>
<g >
<title>sched_balance_find_src_group (11,392,131 samples, 0.01%)</title><rect x="1184.4" y="181" width="0.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1187.36" y="191.5" ></text>
</g>
<g >
<title>folios_put_refs (39,119,808 samples, 0.03%)</title><rect x="1181.6" y="165" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1184.56" y="175.5" ></text>
</g>
<g >
<title>count_memcg_events.constprop.0 (36,763,985 samples, 0.03%)</title><rect x="1166.9" y="181" width="0.4" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="1169.87" y="191.5" ></text>
</g>
<g >
<title>schedule (11,392,131 samples, 0.01%)</title><rect x="1184.4" y="293" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1187.36" y="303.5" ></text>
</g>
<g >
<title>unmap_page_range (118,318,164 samples, 0.10%)</title><rect x="1182.0" y="197" width="1.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1184.97" y="207.5" ></text>
</g>
<g >
<title>__pte_offset_map_lock (72,294,902 samples, 0.06%)</title><rect x="1165.0" y="149" width="0.7" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1167.97" y="159.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (40,287,684 samples, 0.04%)</title><rect x="1158.6" y="245" width="0.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1161.61" y="255.5" ></text>
</g>
<g >
<title>kworker/10:0-ev (40,288,716 samples, 0.04%)</title><rect x="1183.2" y="373" width="0.5" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1186.25" y="383.5" ></text>
</g>
<g >
<title>philox_next4 (39,410,841 samples, 0.03%)</title><rect x="1159.8" y="277" width="0.4" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="1162.83" y="287.5" ></text>
</g>
<g >
<title>psi_task_change (13,964,078 samples, 0.01%)</title><rect x="1183.8" y="229" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1186.81" y="239.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (80,576,262 samples, 0.07%)</title><rect x="1158.6" y="293" width="0.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1161.61" y="303.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (12,341,434 samples, 0.01%)</title><rect x="1184.0" y="309" width="0.1" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="1186.95" y="319.5" ></text>
</g>
<g >
<title>dequeue_task_fair (12,894,795 samples, 0.01%)</title><rect x="1183.7" y="245" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1186.67" y="255.5" ></text>
</g>
<g >
<title>__page_cache_release.part.0 (39,119,808 samples, 0.03%)</title><rect x="1181.6" y="149" width="0.4" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="1184.56" y="159.5" ></text>
</g>
<g >
<title>wezterm-gui (129,533,947 samples, 0.11%)</title><rect x="1188.6" y="373" width="1.4" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1191.65" y="383.5" ></text>
</g>
<g >
<title>genetic::crossover (33,787,502 samples, 0.03%)</title><rect x="1160.2" y="293" width="0.4" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1163.24" y="303.5" ></text>
</g>
<g >
<title>dequeue_entity (12,894,795 samples, 0.01%)</title><rect x="1183.7" y="213" width="0.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1186.67" y="223.5" ></text>
</g>
<g >
<title>cpu_stopper_thread (13,964,078 samples, 0.01%)</title><rect x="1183.8" y="293" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1186.81" y="303.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (80,576,262 samples, 0.07%)</title><rect x="1158.6" y="261" width="0.9" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1161.61" y="271.5" ></text>
</g>
<g >
<title>migration/9 (15,330,144 samples, 0.01%)</title><rect x="1184.5" y="373" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1187.48" y="383.5" ></text>
</g>
<g >
<title>genetic::build_program (39,410,841 samples, 0.03%)</title><rect x="1159.8" y="293" width="0.4" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1162.83" y="303.5" ></text>
</g>
<g >
<title>ret_from_fork_asm (11,392,131 samples, 0.01%)</title><rect x="1184.4" y="357" width="0.1" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1187.36" y="367.5" ></text>
</g>
<g >
<title>cpu_startup_entry (301,615,797 samples, 0.27%)</title><rect x="1185.5" y="325" width="3.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1188.49" y="335.5" ></text>
</g>
<g >
<title>collect_percpu_times (40,288,716 samples, 0.04%)</title><rect x="1183.2" y="261" width="0.5" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1186.25" y="271.5" ></text>
</g>
<g >
<title>_raw_spin_lock (15,823,689 samples, 0.01%)</title><rect x="1188.5" y="229" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1191.48" y="239.5" ></text>
</g>
<g >
<title>psi_group_change (35,746,353 samples, 0.03%)</title><rect x="1159.5" y="165" width="0.3" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="1162.45" y="175.5" ></text>
</g>
<g >
<title>alloc_pages_mpol_noprof (72,143,414 samples, 0.06%)</title><rect x="1174.4" y="101" width="0.7" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1177.35" y="111.5" ></text>
</g>
<g >
<title>schedule (35,746,353 samples, 0.03%)</title><rect x="1159.5" y="213" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1162.45" y="223.5" ></text>
</g>
<g >
<title>unmap_vmas (18,156,002 samples, 0.02%)</title><rect x="1185.3" y="197" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1188.30" y="207.5" ></text>
</g>
<g >
<title>psi_avgs_work (40,288,716 samples, 0.04%)</title><rect x="1183.2" y="277" width="0.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1186.25" y="287.5" ></text>
</g>
<g >
<title>swapper (301,615,797 samples, 0.27%)</title><rect x="1185.5" y="373" width="3.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1188.49" y="383.5" ></text>
</g>
<g >
<title>alloc_pages_mpol_noprof (36,751,615 samples, 0.03%)</title><rect x="1166.5" y="117" width="0.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1169.49" y="127.5" ></text>
</g>
<g >
<title>gomp_team_barrier_wait_end (35,746,353 samples, 0.03%)</title><rect x="1159.5" y="341" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1162.45" y="351.5" ></text>
</g>
<g >
<title>__schedule (11,392,131 samples, 0.01%)</title><rect x="1184.4" y="277" width="0.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1187.36" y="287.5" ></text>
</g>
<g >
<title>sync_regs (165,155,239 samples, 0.15%)</title><rect x="1167.3" y="229" width="1.7" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1170.25" y="239.5" ></text>
</g>
<g >
<title>ret_from_fork (12,894,795 samples, 0.01%)</title><rect x="1183.7" y="341" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1186.67" y="351.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (39,119,808 samples, 0.03%)</title><rect x="1181.6" y="181" width="0.4" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1184.56" y="191.5" ></text>
</g>
<g >
<title>__rmqueue_pcplist (72,143,414 samples, 0.06%)</title><rect x="1174.4" y="53" width="0.7" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1177.35" y="63.5" ></text>
</g>
<g >
<title>cpuidle_enter (262,742,247 samples, 0.23%)</title><rect x="1185.5" y="293" width="2.7" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1188.49" y="303.5" ></text>
</g>
<g >
<title>cpu_stopper_thread (10,250,812 samples, 0.01%)</title><rect x="1184.3" y="293" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1187.25" y="303.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (262,742,247 samples, 0.23%)</title><rect x="1185.5" y="277" width="2.7" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1188.49" y="287.5" ></text>
</g>
<g >
<title>tick_nohz_handler (40,287,684 samples, 0.04%)</title><rect x="1158.6" y="229" width="0.4" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="1161.61" y="239.5" ></text>
</g>
</g>
</svg>
